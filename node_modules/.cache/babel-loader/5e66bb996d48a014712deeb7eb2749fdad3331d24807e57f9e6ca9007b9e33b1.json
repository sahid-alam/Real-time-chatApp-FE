{"ast":null,"code":"var _jsxFileName = \"/Users/sahidalam/Developer/Cohort_3.0/WebDev/Class/Week16-Websockets/websocket-2-chatApp-FE/chatApp_fe/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport MessageList from './MessageList';\nimport ChatHeader from './ChatHeader';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  messages,\n  connectionStatus,\n  currentUser,\n  onSendMessage,\n  onLeaveRoom,\n  userCount\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const messagesEndRef = useRef(null);\n  const messagesAreaRef = useRef(null);\n  const [showScrollToBottom, setShowScrollToBottom] = useState(false);\n\n  // Helper to check if user is at the bottom\n  const isAtBottom = useCallback(() => {\n    const area = messagesAreaRef.current;\n    if (!area) return true;\n    return area.scrollHeight - area.scrollTop - area.clientHeight < 40;\n  }, []);\n\n  // Scroll to bottom\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setShowScrollToBottom(false);\n  }, []);\n\n  // Show/hide arrow on scroll\n  const handleScroll = useCallback(() => {\n    setShowScrollToBottom(!isAtBottom());\n  }, [isAtBottom]);\n\n  // On new message, show arrow if not at bottom\n  useEffect(() => {\n    if (!isAtBottom()) {\n      setShowScrollToBottom(true);\n    } else {\n      scrollToBottom();\n    }\n    // eslint-disable-next-line\n  }, [messages]);\n  useEffect(() => {\n    const area = messagesAreaRef.current;\n    if (area) {\n      area.addEventListener('scroll', handleScroll);\n      return () => area.removeEventListener('scroll', handleScroll);\n    }\n  }, [handleScroll]);\n  const handleSendMessage = () => {\n    if (inputValue.trim() && connectionStatus === 'connected') {\n      onSendMessage(inputValue.trim());\n      setInputValue('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col bg-dark-bg w-full max-w-full\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      roomCode: currentUser.room,\n      connectionStatus: connectionStatus,\n      onLeaveRoom: onLeaveRoom,\n      userCount: userCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto min-h-0 px-2 sm:px-4 pb-2 relative\",\n      ref: messagesAreaRef,\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        currentUserName: currentUser.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), showScrollToBottom && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fixed bottom-24 right-6 z-20 bg-retro-green text-black p-4 rounded-full border-2 border-retro-border shadow-[0_0_16px_4px_#39FF14] animate-bounce hover:bg-retro-amber hover:text-black transition-colors focus:outline-none focus:ring-4 focus:ring-retro-green\",\n        onClick: scrollToBottom,\n        \"aria-label\": \"Scroll to latest message\",\n        style: {\n          boxShadow: '0 0 16px 4px #39FF14, 0 2px 8px rgba(0,0,0,0.3)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 32,\n            display: 'block',\n            lineHeight: 1\n          },\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 sm:p-4 border-t border-dark-border bg-dark-bg sticky bottom-0 w-full\",\n      children: /*#__PURE__*/_jsxDEV(ChatInput, {\n        value: inputValue,\n        onChange: setInputValue,\n        onSend: handleSendMessage,\n        onKeyPress: handleKeyPress,\n        disabled: connectionStatus !== 'connected',\n        placeholder: connectionStatus === 'connected' ? 'Type your message...' : 'Connecting...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"q7Zezz1FxDQJCT6IHrl/NJmj0lY=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","MessageList","ChatHeader","ChatInput","jsxDEV","_jsxDEV","ChatInterface","messages","connectionStatus","currentUser","onSendMessage","onLeaveRoom","userCount","_s","inputValue","setInputValue","messagesEndRef","messagesAreaRef","showScrollToBottom","setShowScrollToBottom","isAtBottom","area","current","scrollHeight","scrollTop","clientHeight","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","handleScroll","addEventListener","removeEventListener","handleSendMessage","trim","handleKeyPress","e","key","shiftKey","preventDefault","className","children","roomCode","room","fileName","_jsxFileName","lineNumber","columnNumber","ref","currentUserName","name","onClick","style","boxShadow","fontSize","display","lineHeight","value","onChange","onSend","onKeyPress","disabled","placeholder","_c","$RefreshReg$"],"sources":["/Users/sahidalam/Developer/Cohort_3.0/WebDev/Class/Week16-Websockets/websocket-2-chatApp-FE/chatApp_fe/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Message, User, ConnectionStatus } from '../types/chat';\nimport MessageList from './MessageList';\nimport ChatHeader from './ChatHeader';\nimport ChatInput from './ChatInput';\n\ninterface ChatInterfaceProps {\n  messages: Message[];\n  connectionStatus: ConnectionStatus;\n  currentUser: User;\n  onSendMessage: (text: string) => void;\n  onLeaveRoom: () => void;\n  userCount: number;\n}\n\nconst ChatInterface: React.FC<ChatInterfaceProps> = ({\n  messages,\n  connectionStatus,\n  currentUser,\n  onSendMessage,\n  onLeaveRoom,\n  userCount\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesAreaRef = useRef<HTMLDivElement>(null);\n  const [showScrollToBottom, setShowScrollToBottom] = useState(false);\n\n  // Helper to check if user is at the bottom\n  const isAtBottom = useCallback(() => {\n    const area = messagesAreaRef.current;\n    if (!area) return true;\n    return area.scrollHeight - area.scrollTop - area.clientHeight < 40;\n  }, []);\n\n  // Scroll to bottom\n  const scrollToBottom = useCallback(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    setShowScrollToBottom(false);\n  }, []);\n\n  // Show/hide arrow on scroll\n  const handleScroll = useCallback(() => {\n    setShowScrollToBottom(!isAtBottom());\n  }, [isAtBottom]);\n\n  // On new message, show arrow if not at bottom\n  useEffect(() => {\n    if (!isAtBottom()) {\n      setShowScrollToBottom(true);\n    } else {\n      scrollToBottom();\n    }\n    // eslint-disable-next-line\n  }, [messages]);\n\n  useEffect(() => {\n    const area = messagesAreaRef.current;\n    if (area) {\n      area.addEventListener('scroll', handleScroll);\n      return () => area.removeEventListener('scroll', handleScroll);\n    }\n  }, [handleScroll]);\n\n  const handleSendMessage = () => {\n    if (inputValue.trim() && connectionStatus === 'connected') {\n      onSendMessage(inputValue.trim());\n      setInputValue('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-dark-bg w-full max-w-full\">\n      {/* Header */}\n      <ChatHeader\n        roomCode={currentUser.room}\n        connectionStatus={connectionStatus}\n        onLeaveRoom={onLeaveRoom}\n        userCount={userCount}\n      />\n\n      {/* Messages Area */}\n      <div\n        className=\"flex-1 overflow-y-auto min-h-0 px-2 sm:px-4 pb-2 relative\"\n        ref={messagesAreaRef}\n      >\n        <MessageList\n          messages={messages}\n          currentUserName={currentUser.name}\n        />\n        <div ref={messagesEndRef} />\n        {showScrollToBottom && (\n          <button\n            className=\"fixed bottom-24 right-6 z-20 bg-retro-green text-black p-4 rounded-full border-2 border-retro-border shadow-[0_0_16px_4px_#39FF14] animate-bounce hover:bg-retro-amber hover:text-black transition-colors focus:outline-none focus:ring-4 focus:ring-retro-green\"\n            onClick={scrollToBottom}\n            aria-label=\"Scroll to latest message\"\n            style={{ boxShadow: '0 0 16px 4px #39FF14, 0 2px 8px rgba(0,0,0,0.3)' }}\n          >\n            <span style={{ fontSize: 32, display: 'block', lineHeight: 1 }}>â†“</span>\n          </button>\n        )}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"p-2 sm:p-4 border-t border-dark-border bg-dark-bg sticky bottom-0 w-full\">\n        <ChatInput\n          value={inputValue}\n          onChange={setInputValue}\n          onSend={handleSendMessage}\n          onKeyPress={handleKeyPress}\n          disabled={connectionStatus !== 'connected'}\n          placeholder={\n            connectionStatus === 'connected'\n              ? 'Type your message...'\n              : 'Connecting...'\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}