{"ast":null,"code":"var _jsxFileName = \"/Users/sahidalam/Developer/Cohort_3.0/WebDev/Class/Week16-Websockets/websocket-2-chatApp-FE/chatApp_fe/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LandingPage from './components/LandingPage';\nimport ChatInterface from './components/ChatInterface';\nimport { WebSocketService } from './utils/websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [currentUser, setCurrentUser] = useState(null);\n  const [wsService, setWsService] = useState(null);\n  const [userCount, setUserCount] = useState(1);\n  useEffect(() => {\n    const ws = new WebSocketService('ws://localhost:8081', handleWebSocketMessage, handleConnectionStatusChange);\n    setWsService(ws);\n    return () => {\n      ws.disconnect();\n    };\n  }, []);\n  const handleWebSocketMessage = message => {\n    const timestamp = Date.now();\n    if (message.type === 'chat' && message.text && message.from) {\n      const chatMessage = {\n        type: 'chat',\n        text: message.text,\n        from: message.from,\n        timestamp\n      };\n      setMessages(prev => [...prev, chatMessage]);\n    } else if (message.type === 'info' && message.message) {\n      const systemMessage = {\n        type: 'info',\n        message: message.message,\n        timestamp\n      };\n      setMessages(prev => [...prev, systemMessage]);\n    } else if (message.type === 'error' && message.message) {\n      const errorMessage = {\n        type: 'error',\n        message: message.message,\n        timestamp\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } else if ((message.type === 'user_count' || message.type === 'userCount') && typeof message.count === 'number') {\n      setUserCount(message.count);\n    } else if (message.type === 'user_list' && Array.isArray(message.users)) {\n      setUserCount(message.users.length);\n    }\n  };\n  const handleConnectionStatusChange = status => {\n    setConnectionStatus(status);\n  };\n  const joinRoom = async (roomCode, userName) => {\n    if (!wsService) return;\n    try {\n      await wsService.connect();\n      wsService.send({\n        type: 'join',\n        room: roomCode,\n        name: userName\n      });\n      setCurrentUser({\n        name: userName,\n        room: roomCode\n      });\n    } catch (error) {\n      console.error('Failed to join room:', error);\n    }\n  };\n  const leaveRoom = () => {\n    if (wsService) {\n      wsService.disconnect();\n    }\n    setCurrentUser(null);\n    setMessages([]);\n  };\n  const sendMessage = text => {\n    if (wsService && currentUser) {\n      wsService.send({\n        type: 'chat',\n        text\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-dark-bg\",\n    children: !currentUser ? /*#__PURE__*/_jsxDEV(LandingPage, {\n      onJoinRoom: joinRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatInterface, {\n      messages: messages,\n      connectionStatus: connectionStatus,\n      currentUser: currentUser,\n      onSendMessage: sendMessage,\n      onLeaveRoom: leaveRoom,\n      userCount: userCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z6WNGhRITD1hRNtRvYPTsq2JuS4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LandingPage","ChatInterface","WebSocketService","jsxDEV","_jsxDEV","App","_s","messages","setMessages","connectionStatus","setConnectionStatus","currentUser","setCurrentUser","wsService","setWsService","userCount","setUserCount","ws","handleWebSocketMessage","handleConnectionStatusChange","disconnect","message","timestamp","Date","now","type","text","from","chatMessage","prev","systemMessage","errorMessage","count","Array","isArray","users","length","status","joinRoom","roomCode","userName","connect","send","room","name","error","console","leaveRoom","sendMessage","className","children","onJoinRoom","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","onLeaveRoom","_c","$RefreshReg$"],"sources":["/Users/sahidalam/Developer/Cohort_3.0/WebDev/Class/Week16-Websockets/websocket-2-chatApp-FE/chatApp_fe/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LandingPage from './components/LandingPage';\nimport ChatInterface from './components/ChatInterface';\nimport { WebSocketService } from './utils/websocket';\nimport type { Message, User, ConnectionStatus, WebSocketMessage } from './types/chat';\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [connectionStatus, setConnectionStatus] = useState<ConnectionStatus>('disconnected');\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [wsService, setWsService] = useState<WebSocketService | null>(null);\n  const [userCount, setUserCount] = useState<number>(1);\n\n  useEffect(() => {\n    const ws = new WebSocketService(\n      'ws://localhost:8081',\n      handleWebSocketMessage,\n      handleConnectionStatusChange\n    );\n    setWsService(ws);\n\n    return () => {\n      ws.disconnect();\n    };\n  }, []);\n\n  const handleWebSocketMessage = (message: WebSocketMessage) => {\n    const timestamp = Date.now();\n    \n    if (message.type === 'chat' && message.text && message.from) {\n      const chatMessage: Message = {\n        type: 'chat',\n        text: message.text,\n        from: message.from,\n        timestamp\n      };\n      setMessages(prev => [...prev, chatMessage]);\n    } else if (message.type === 'info' && message.message) {\n      const systemMessage: Message = {\n        type: 'info',\n        message: message.message,\n        timestamp\n      };\n      setMessages(prev => [...prev, systemMessage]);\n    } else if (message.type === 'error' && message.message) {\n      const errorMessage: Message = {\n        type: 'error',\n        message: message.message,\n        timestamp\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } else if ((message.type === 'user_count' || message.type === 'userCount') && typeof message.count === 'number') {\n      setUserCount(message.count);\n    } else if (message.type === 'user_list' && Array.isArray(message.users)) {\n      setUserCount(message.users.length);\n    }\n  };\n\n  const handleConnectionStatusChange = (status: string) => {\n    setConnectionStatus(status as ConnectionStatus);\n  };\n\n  const joinRoom = async (roomCode: string, userName: string) => {\n    if (!wsService) return;\n\n    try {\n      await wsService.connect();\n      wsService.send({ type: 'join', room: roomCode, name: userName });\n      setCurrentUser({ name: userName, room: roomCode });\n    } catch (error) {\n      console.error('Failed to join room:', error);\n    }\n  };\n\n  const leaveRoom = () => {\n    if (wsService) {\n      wsService.disconnect();\n    }\n    setCurrentUser(null);\n    setMessages([]);\n  };\n\n  const sendMessage = (text: string) => {\n    if (wsService && currentUser) {\n      wsService.send({ type: 'chat', text });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-dark-bg\">\n      {!currentUser ? (\n        <LandingPage onJoinRoom={joinRoom} />\n      ) : (\n        <ChatInterface\n          messages={messages}\n          connectionStatus={connectionStatus}\n          currentUser={currentUser}\n          onSendMessage={sendMessage}\n          onLeaveRoom={leaveRoom}\n          userCount={userCount}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}